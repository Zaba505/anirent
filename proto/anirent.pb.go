// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: anirent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format int32

const (
	Format_MKV Format = 0
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "MKV",
	}
	Format_value = map[string]int32{
		"MKV": 0,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_anirent_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_anirent_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{0}
}

// Resolution represents the desired video resolution e.g. 720p, 1080p, 4k...
type Resolution int32

const (
	Resolution_P_360  Resolution = 0
	Resolution_P_480  Resolution = 1
	Resolution_P_720  Resolution = 2
	Resolution_P_1080 Resolution = 3
	Resolution_P_2160 Resolution = 4
	Resolution_K_4    Resolution = 5
)

// Enum value maps for Resolution.
var (
	Resolution_name = map[int32]string{
		0: "P_360",
		1: "P_480",
		2: "P_720",
		3: "P_1080",
		4: "P_2160",
		5: "K_4",
	}
	Resolution_value = map[string]int32{
		"P_360":  0,
		"P_480":  1,
		"P_720":  2,
		"P_1080": 3,
		"P_2160": 4,
		"K_4":    5,
	}
)

func (x Resolution) Enum() *Resolution {
	p := new(Resolution)
	*p = x
	return p
}

func (x Resolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resolution) Descriptor() protoreflect.EnumDescriptor {
	return file_anirent_proto_enumTypes[1].Descriptor()
}

func (Resolution) Type() protoreflect.EnumType {
	return &file_anirent_proto_enumTypes[1]
}

func (x Resolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resolution.Descriptor instead.
func (Resolution) EnumDescriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{1}
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the anime to search for.
	AnimeName string `protobuf:"bytes,1,opt,name=anime_name,json=animeName,proto3" json:"anime_name,omitempty"`
	// Desired resolutions
	Resolutions []Resolution `protobuf:"varint,2,rep,packed,name=resolutions,proto3,enum=proto.Resolution" json:"resolutions,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetAnimeName() string {
	if x != nil {
		return x.AnimeName
	}
	return ""
}

func (x *SearchRequest) GetResolutions() []Resolution {
	if x != nil {
		return x.Resolutions
	}
	return nil
}

type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Content name/title e.g. name of anime or name of a movie
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The video resolution of this result.
	Resolution Resolution `protobuf:"varint,2,opt,name=resolution,proto3,enum=proto.Resolution" json:"resolution,omitempty"`
	// The video file format
	Format Format `protobuf:"varint,3,opt,name=format,proto3,enum=proto.Format" json:"format,omitempty"`
	// The details of this result. This field identifies what type of result
	// was found. For example, it may represent a single episode or an entire
	// season of episodes.
	//
	// Types that are assignable to Details:
	//	*SearchResult_Episode
	//	*SearchResult_Season
	Details isSearchResult_Details `protobuf_oneof:"details"`
	// magnet link for downloading torrent content
	Magnet string `protobuf:"bytes,6,opt,name=magnet,proto3" json:"magnet,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchResult) GetResolution() Resolution {
	if x != nil {
		return x.Resolution
	}
	return Resolution_P_360
}

func (x *SearchResult) GetFormat() Format {
	if x != nil {
		return x.Format
	}
	return Format_MKV
}

func (m *SearchResult) GetDetails() isSearchResult_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *SearchResult) GetEpisode() *Episode {
	if x, ok := x.GetDetails().(*SearchResult_Episode); ok {
		return x.Episode
	}
	return nil
}

func (x *SearchResult) GetSeason() *CompleteSeason {
	if x, ok := x.GetDetails().(*SearchResult_Season); ok {
		return x.Season
	}
	return nil
}

func (x *SearchResult) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

type isSearchResult_Details interface {
	isSearchResult_Details()
}

type SearchResult_Episode struct {
	Episode *Episode `protobuf:"bytes,4,opt,name=episode,proto3,oneof"`
}

type SearchResult_Season struct {
	Season *CompleteSeason `protobuf:"bytes,5,opt,name=season,proto3,oneof"`
}

func (*SearchResult_Episode) isSearchResult_Details() {}

func (*SearchResult_Season) isSearchResult_Details() {}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The desired search result for downloading.
	Result *SearchResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadRequest) GetResult() *SearchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadResponse) GetSubscription() *Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{4}
}

func (x *Subscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The subscription id which this event corresponds to.
	SubscriptionId string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Types that are assignable to Payload:
	//	*Event_Started
	//	*Event_Progress
	//	*Event_Completed
	//	*Event_Failure
	Payload isEvent_Payload `protobuf_oneof:"payload"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{5}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetStarted() *DownloadStarted {
	if x, ok := x.GetPayload().(*Event_Started); ok {
		return x.Started
	}
	return nil
}

func (x *Event) GetProgress() *DownloadProgress {
	if x, ok := x.GetPayload().(*Event_Progress); ok {
		return x.Progress
	}
	return nil
}

func (x *Event) GetCompleted() *DownloadComplete {
	if x, ok := x.GetPayload().(*Event_Completed); ok {
		return x.Completed
	}
	return nil
}

func (x *Event) GetFailure() *DownloadFailure {
	if x, ok := x.GetPayload().(*Event_Failure); ok {
		return x.Failure
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_Started struct {
	Started *DownloadStarted `protobuf:"bytes,3,opt,name=started,proto3,oneof"`
}

type Event_Progress struct {
	Progress *DownloadProgress `protobuf:"bytes,4,opt,name=progress,proto3,oneof"`
}

type Event_Completed struct {
	Completed *DownloadComplete `protobuf:"bytes,5,opt,name=completed,proto3,oneof"`
}

type Event_Failure struct {
	Failure *DownloadFailure `protobuf:"bytes,6,opt,name=failure,proto3,oneof"`
}

func (*Event_Started) isEvent_Payload() {}

func (*Event_Progress) isEvent_Payload() {}

func (*Event_Completed) isEvent_Payload() {}

func (*Event_Failure) isEvent_Payload() {}

type DownloadStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The magnet link being downloaded.
	Magnet string `protobuf:"bytes,1,opt,name=magnet,proto3" json:"magnet,omitempty"`
	// The total size in bytes which will be downloaded.
	TotalBytes int64 `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	// Multi-address representing location of downloaded content.
	MultiAddr string `protobuf:"bytes,3,opt,name=multi_addr,json=multiAddr,proto3" json:"multi_addr,omitempty"`
}

func (x *DownloadStarted) Reset() {
	*x = DownloadStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadStarted) ProtoMessage() {}

func (x *DownloadStarted) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadStarted.ProtoReflect.Descriptor instead.
func (*DownloadStarted) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadStarted) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

func (x *DownloadStarted) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DownloadStarted) GetMultiAddr() string {
	if x != nil {
		return x.MultiAddr
	}
	return ""
}

type DownloadProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The magnet link being downloaded
	Magnet string `protobuf:"bytes,1,opt,name=magnet,proto3" json:"magnet,omitempty"`
	// Total bytes downloaded so far
	DownloadedBytes int64 `protobuf:"varint,2,opt,name=downloaded_bytes,json=downloadedBytes,proto3" json:"downloaded_bytes,omitempty"`
	// Total size in bytes of torrent.
	TotalBytes int64 `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	// Multi-address representing location of downloaded content.
	MultiAddr string `protobuf:"bytes,4,opt,name=multi_addr,json=multiAddr,proto3" json:"multi_addr,omitempty"`
}

func (x *DownloadProgress) Reset() {
	*x = DownloadProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadProgress) ProtoMessage() {}

func (x *DownloadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadProgress.ProtoReflect.Descriptor instead.
func (*DownloadProgress) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadProgress) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

func (x *DownloadProgress) GetDownloadedBytes() int64 {
	if x != nil {
		return x.DownloadedBytes
	}
	return 0
}

func (x *DownloadProgress) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DownloadProgress) GetMultiAddr() string {
	if x != nil {
		return x.MultiAddr
	}
	return ""
}

type DownloadComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The magnet link which was downloaded
	Magnet string `protobuf:"bytes,1,opt,name=magnet,proto3" json:"magnet,omitempty"`
	// Total size in bytes of torrent which was downloaded.
	TotalBytes int64 `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	// Multi-address representing location of downloaded content.
	MultiAddr string `protobuf:"bytes,3,opt,name=multi_addr,json=multiAddr,proto3" json:"multi_addr,omitempty"`
}

func (x *DownloadComplete) Reset() {
	*x = DownloadComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadComplete) ProtoMessage() {}

func (x *DownloadComplete) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadComplete.ProtoReflect.Descriptor instead.
func (*DownloadComplete) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{8}
}

func (x *DownloadComplete) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

func (x *DownloadComplete) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DownloadComplete) GetMultiAddr() string {
	if x != nil {
		return x.MultiAddr
	}
	return ""
}

type DownloadFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The magnet link which failed to download.
	Magnet string `protobuf:"bytes,1,opt,name=magnet,proto3" json:"magnet,omitempty"`
	// The error
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DownloadFailure) Reset() {
	*x = DownloadFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFailure) ProtoMessage() {}

func (x *DownloadFailure) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFailure.ProtoReflect.Descriptor instead.
func (*DownloadFailure) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadFailure) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

func (x *DownloadFailure) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The season this episode belongs to.
	Season int64 `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"`
	// Where this episode falls in the order of all the episodes
	// belonging to the given season.
	Number int64 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{10}
}

func (x *Episode) GetSeason() int64 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *Episode) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type CompleteSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Where this season falls in the order of all the anime's seasons.
	Number   int64      `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Episodes []*Episode `protobuf:"bytes,2,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *CompleteSeason) Reset() {
	*x = CompleteSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anirent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSeason) ProtoMessage() {}

func (x *CompleteSeason) ProtoReflect() protoreflect.Message {
	mi := &file_anirent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSeason.ProtoReflect.Descriptor instead.
func (*CompleteSeason) Descriptor() ([]byte, []int) {
	return file_anirent_proto_rawDescGZIP(), []int{11}
}

func (x *CompleteSeason) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CompleteSeason) GetEpisodes() []*Episode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

var File_anirent_proto protoreflect.FileDescriptor

var file_anirent_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x07, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3e, 0x0a, 0x0f, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x10, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x35,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x32,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x69, 0x0a,
	0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72,
	0x22, 0x6a, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x22, 0x3f, 0x0a, 0x0f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x39, 0x0a,
	0x07, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x2a, 0x11,
	0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4b, 0x56, 0x10,
	0x00, 0x2a, 0x4e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x5f, 0x33, 0x36, 0x30, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x5f,
	0x34, 0x38, 0x30, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x5f, 0x37, 0x32, 0x30, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x5f, 0x31, 0x30, 0x38, 0x30, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x5f, 0x32, 0x31, 0x36, 0x30, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x5f, 0x34, 0x10,
	0x05, 0x32, 0xaf, 0x01, 0x0a, 0x07, 0x41, 0x6e, 0x69, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anirent_proto_rawDescOnce sync.Once
	file_anirent_proto_rawDescData = file_anirent_proto_rawDesc
)

func file_anirent_proto_rawDescGZIP() []byte {
	file_anirent_proto_rawDescOnce.Do(func() {
		file_anirent_proto_rawDescData = protoimpl.X.CompressGZIP(file_anirent_proto_rawDescData)
	})
	return file_anirent_proto_rawDescData
}

var file_anirent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_anirent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_anirent_proto_goTypes = []interface{}{
	(Format)(0),              // 0: proto.Format
	(Resolution)(0),          // 1: proto.Resolution
	(*SearchRequest)(nil),    // 2: proto.SearchRequest
	(*SearchResult)(nil),     // 3: proto.SearchResult
	(*DownloadRequest)(nil),  // 4: proto.DownloadRequest
	(*DownloadResponse)(nil), // 5: proto.DownloadResponse
	(*Subscription)(nil),     // 6: proto.Subscription
	(*Event)(nil),            // 7: proto.Event
	(*DownloadStarted)(nil),  // 8: proto.DownloadStarted
	(*DownloadProgress)(nil), // 9: proto.DownloadProgress
	(*DownloadComplete)(nil), // 10: proto.DownloadComplete
	(*DownloadFailure)(nil),  // 11: proto.DownloadFailure
	(*Episode)(nil),          // 12: proto.Episode
	(*CompleteSeason)(nil),   // 13: proto.CompleteSeason
}
var file_anirent_proto_depIdxs = []int32{
	1,  // 0: proto.SearchRequest.resolutions:type_name -> proto.Resolution
	1,  // 1: proto.SearchResult.resolution:type_name -> proto.Resolution
	0,  // 2: proto.SearchResult.format:type_name -> proto.Format
	12, // 3: proto.SearchResult.episode:type_name -> proto.Episode
	13, // 4: proto.SearchResult.season:type_name -> proto.CompleteSeason
	3,  // 5: proto.DownloadRequest.result:type_name -> proto.SearchResult
	6,  // 6: proto.DownloadResponse.subscription:type_name -> proto.Subscription
	8,  // 7: proto.Event.started:type_name -> proto.DownloadStarted
	9,  // 8: proto.Event.progress:type_name -> proto.DownloadProgress
	10, // 9: proto.Event.completed:type_name -> proto.DownloadComplete
	11, // 10: proto.Event.failure:type_name -> proto.DownloadFailure
	12, // 11: proto.CompleteSeason.episodes:type_name -> proto.Episode
	2,  // 12: proto.Anirent.Search:input_type -> proto.SearchRequest
	4,  // 13: proto.Anirent.Download:input_type -> proto.DownloadRequest
	6,  // 14: proto.Anirent.Subscribe:input_type -> proto.Subscription
	3,  // 15: proto.Anirent.Search:output_type -> proto.SearchResult
	5,  // 16: proto.Anirent.Download:output_type -> proto.DownloadResponse
	7,  // 17: proto.Anirent.Subscribe:output_type -> proto.Event
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_anirent_proto_init() }
func file_anirent_proto_init() {
	if File_anirent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anirent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anirent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_anirent_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SearchResult_Episode)(nil),
		(*SearchResult_Season)(nil),
	}
	file_anirent_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Event_Started)(nil),
		(*Event_Progress)(nil),
		(*Event_Completed)(nil),
		(*Event_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anirent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_anirent_proto_goTypes,
		DependencyIndexes: file_anirent_proto_depIdxs,
		EnumInfos:         file_anirent_proto_enumTypes,
		MessageInfos:      file_anirent_proto_msgTypes,
	}.Build()
	File_anirent_proto = out.File
	file_anirent_proto_rawDesc = nil
	file_anirent_proto_goTypes = nil
	file_anirent_proto_depIdxs = nil
}
